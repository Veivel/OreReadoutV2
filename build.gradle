import org.jetbrains.changelog.Changelog

plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
    id 'org.jetbrains.changelog' version '2.2.0'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

repositories {
    maven { url 'https://api.modrinth.com/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "org.yaml:snakeyaml:${project.snakeyaml_version}"
    include "org.yaml:snakeyaml:${project.snakeyaml_version}"

    modImplementation "me.lucko:fabric-permissions-api:${project.fabric_permissions_api_version}"
    include "me.lucko:fabric-permissions-api:${project.fabric_permissions_api_version}"
}

processResources {
    inputs.property "version", project.version

    // Process all resources normally, but expand version in fabric.mod.json
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
        }
    }
}

// this only publishes one artifact: one mod jar for one minecraft version
publishMods {
    file = remapJar.archiveFile
    type = STABLE
    changelog = fetchChangelog()

    displayName = "OreReadoutV2 ${version.get()}"
    modLoaders.add("fabric")

    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = "5LMBevrL"
        minecraftVersions.add(project.minecraft_version)
    }
    github {
        accessToken = providers.environmentVariable("GITHUB_TOKEN")
        repository = providers.environmentVariable("GITHUB_REPOSITORY").getOrElse("Veivel/OreReadoutV2")
        commitish = providers.environmentVariable("GITHUB_REF_NAME").getOrElse("master")
    }
}

// get changelog from CHANGELOG.md
// system copied shamelessly from: github.com/DrexHD/FabricEssentials
private String fetchChangelog() {
    def log = rootProject.extensions.getByType(org.jetbrains.changelog.ChangelogPluginExtension)
    if (log.has(project.mod_version)) {
        return log.renderItem(
            log.get(project.mod_version).withHeader(false),
            Changelog.OutputType.MARKDOWN
        )
    } else {
        return ""
    }
}
